// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "backgroundColor": "#F5FCFF",
        "flex": 1,
        "justifyContent": "center",
        "marginTop": 20,
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "borderColor": "#ccc",
          "borderLeftWidth": 0,
          "borderRightWidth": 0,
          "borderTopWidth": 0,
          "borderWidth": 1,
          "flexDirection": "row",
          "height": 50,
          "justifyContent": "space-around",
        },
        Object {
          "backgroundColor": null,
        },
        undefined,
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel="Welcome"
      accessibilityTraits="button"
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
              "paddingBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "navy",
                "fontWeight": "bold",
              },
              undefined,
            ]
          }
        >
          Welcome
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel="Free"
      accessibilityTraits="button"
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
              "paddingBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "black",
                "fontWeight": "normal",
              },
              undefined,
            ]
          }
        >
          Free
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel="Map"
      accessibilityTraits="button"
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
              "paddingBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "black",
                "fontWeight": "normal",
              },
              undefined,
            ]
          }
        >
          Map
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel="Settings"
      accessibilityTraits="button"
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
              "paddingBottom": 10,
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "black",
                "fontWeight": "normal",
              },
              undefined,
            ]
          }
        >
          Settings
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "navy",
          "bottom": 0,
          "height": 4,
          "left": 0,
          "position": "absolute",
          "width": 187.5,
        }
      }
    />
  </View>
  <RCTScrollView
    alwaysBounceVertical={false}
    automaticallyAdjustContentInsets={false}
    contentOffset={
      Object {
        "x": 0,
      }
    }
    directionalLockEnabled={true}
    horizontal={true}
    keyboardDismissMode="on-drag"
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    pagingEnabled={true}
    scrollEnabled={true}
    scrollEventThrottle={16}
    scrollsToTop={false}
    showsHorizontalScrollIndicator={false}
  >
    <View>
      <View
        style={
          Object {
            "width": 750,
          }
        }
      >
        <View
          tabLabel="Welcome"
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 20,
                "margin": 10,
                "textAlign": "center",
              }
            }
          >
            Welcome to the Venligboerne App!
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#333333",
                "marginBottom": 5,
                "textAlign": "center",
              }
            }
          >
            There is some tabbed navigation up above, and each of these panes can scroll individually. If you try it on a device I think you will find it's nice to navigate.
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#333333",
                "marginBottom": 5,
                "textAlign": "center",
              }
            }
          >
            In this version I also merged the index code for iOS and Android into one place (main.js)
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "width": 750,
          }
        }
      >
        <View
          tabLabel="Free"
        />
      </View>
      <View
        style={
          Object {
            "width": 750,
          }
        }
      >
        <View
          tabLabel="Map"
        />
      </View>
      <View
        style={
          Object {
            "width": 750,
          }
        }
      >
        <View
          tabLabel="Settings"
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;
